{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add/add.component.html","webpack:///./src/app/components/add/add.component.scss","webpack:///./src/app/components/add/add.component.ts","webpack:///./src/app/components/addresses/addresses.component.html","webpack:///./src/app/components/addresses/addresses.component.scss","webpack:///./src/app/components/addresses/addresses.component.ts","webpack:///./src/app/services/address.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<mat-toolbar>\\r\\n     Adrress List\\r\\n    <span style=\\\"flex: 1 1 auto\\\"></span>\\r\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"add\\\">Add</button>\\r\\n</mat-toolbar>\\r\\n<router-outlet></router-outlet>\\r\\n<app-addresses></app-addresses>\\r\\n\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'eoh';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpModule } from '@angular/http';\r\nimport { MatButtonModule, MatCardModule, MatToolbarModule, MatInputModule, MatFormFieldModule } from '@angular/material';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AddressesComponent } from './components/addresses/addresses.component';\r\nimport { AddComponent } from './components/add/add.component';\r\n\r\nconst routes = [\r\n  { path: 'list', component: AddressesComponent },\r\n  { path: 'add', component: AddComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    AddressesComponent,\r\n    AddComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    NoopAnimationsModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    RouterModule.forRoot(\r\n      routes\r\n    )\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<mat-card>\\r\\n    <mat-card-title><h4>Add new address</h4></mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <form [formGroup]=\\\"newAdressForm\\\">\\r\\n           <mat-form-field>\\r\\n             <input type=\\\"text\\\" name=\\\"AddressName\\\" formControlName=\\\"AddressName\\\" matInput placeholder=\\\"Address Name\\\"/>\\r\\n           </mat-form-field>\\r\\n           <mat-form-field>\\r\\n             <input type=\\\"text\\\" name=\\\"Address\\\" formControlName=\\\"Address\\\" matInput placeholder=\\\"Address\\\" />\\r\\n           </mat-form-field>\\r\\n           <mat-form-field>\\r\\n             <input type=\\\"text\\\" name=\\\"AdressPostalCode\\\" formControlName=\\\"AdressPostalCode\\\" matInput placeholder=\\\"Adress Postal Code\\\" />\\r\\n           </mat-form-field>\\r\\n           <button [disabled]=\\\"!newAdressForm.valid\\\" (click)=\\\"addNew()\\\" mat-raised-button color=\\\"accent\\\">Add</button>\\r\\n      </form>\\r\\n      <span *ngIf=\\\"showSuccess\\\" class=\\\"text-green\\\">Added</span>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { AddressService } from '../../services/address.service';\r\n@Component({\r\n  selector: 'app-add',\r\n  templateUrl: './add.component.html',\r\n  styleUrls: ['./add.component.scss']\r\n})\r\nexport class AddComponent implements OnInit {\r\n  newAdressForm: FormGroup;\r\n  showSuccess = false;\r\n  constructor(private adress: AddressService ) { }\r\n\r\n  ngOnInit() {\r\n    this.newAdressForm = new FormGroup ({\r\n      AddressName: new FormControl(null, Validators.required),\r\n      Address: new FormControl(null, Validators.required),\r\n      AdressPostalCode: new FormControl(null, Validators.required),\r\n  });\r\n  }\r\n   addNew() {\r\n      this.adress.add(this.newAdressForm.value).subscribe(res => {\r\n      this.showSuccess = true;\r\n      }, err => {console.log('error', err); });\r\n   }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  \\r\\n</mat-card>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\nimport { AddressService } from '../../services/address.service';\r\n\r\n@Component({\r\n  selector: 'app-addresses',\r\n  templateUrl: './addresses.component.html',\r\n  styleUrls: ['./addresses.component.scss']\r\n})\r\nexport class AddressesComponent implements OnInit {\r\n  addressDetails: any = [];\r\n  constructor( private address: AddressService) {}\r\n\r\n  ngOnInit() {\r\n    this.address.getAddresses().subscribe(res => {\r\n      this.addressDetails = res;\r\n      console.log('adreesses', this.addressDetails);\r\n    }, err => {console.log('404', err); }\r\n  );\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AddressService {\r\n  baseUrl = '/';\r\n  constructor( private http: Http) { }\r\n  /**\r\n   * Getting addreses from the api\r\n   */\r\n  getAddresses() {\r\n    const url = `${this.baseUrl}`;\r\n    const headers = new Headers({'Content-Type': 'application/json'});\r\n    return this.http.get(url, {headers: headers});\r\n  }\r\n\r\n /**\r\n  * Adding a new address\r\n  * @param data address data\r\n  */\r\n  add(adressData) {\r\n     const url = `${this.baseUrl}add`;\r\n     return this.http.post(url, adressData);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}